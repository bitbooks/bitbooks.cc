// Contains components that are not generic enough to be styleguide items (in _base.scss), but not page specific either.

// Form Styles
.form-item {
  margin-bottom: 1.75em;
}

.followup-q {
  font-size: 0.6em;
}

input[type=radio] {
  float: left;
  margin-right: 6px;
}

.success {
  color: green;
}

.failure,
.warning {
  color: red;
}

.required {
  color: red;
}

// Use this around dynamically populated data in the middle of normal
// prose so a person can tell that there is user specific data being
// printed. Example: <span class="custom-data"><%= book.url %></span>
.custom-data {
  font-family: $droid-sans;
  color: $bb-green;
}

// A generic white container for holding forms and other page content.
.container {
  background: #fbfbfb;
  padding: 1px 2em 1em;
  border: 1px solid #ccc;
}

// This class centers a box horizontally.
.center-box {
  display: block; // In case the element isn't block level to begin with.
  margin: 0 auto;
}

// A CSS progress indicator / loading wheel. See http://dabblet.com/gist/7615212.

.spinner {
  height:60px;
  width:60px;
  margin:0px auto;
  position:relative;
  -webkit-animation: rotation .6s infinite linear;
  -moz-animation: rotation .6s infinite linear;
  -o-animation: rotation .6s infinite linear;
  animation: rotation .6s infinite linear;
  border-left:6px solid rgba(0,174,239,.15);
  border-right:6px solid rgba(0,174,239,.15);
  border-bottom:6px solid rgba(0,174,239,.15);
  border-top:6px solid rgba(0,174,239,.8);
  border-radius:100%;
}

@-webkit-keyframes rotation {
  from {-webkit-transform: rotate(0deg);}
  to {-webkit-transform: rotate(359deg);}
}

@-moz-keyframes rotation {
  from {-moz-transform: rotate(0deg);}
  to {-moz-transform: rotate(359deg);}
}

@-o-keyframes rotation {
  from {-o-transform: rotate(0deg);}
  to {-o-transform: rotate(359deg);}
}

@keyframes rotation {
  from {transform: rotate(0deg);}
  to {transform: rotate(359deg);}
}